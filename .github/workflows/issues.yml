# https://github.com/mkungla/github-cicd/discussions/11
name: issues
on:
  issues:
    types:
      - opened
      - edited
      - deleted
      - transferred
      - pinned
      - unpinned
      - closed
      - reopened
      - assigned
      - unassigned
      - labeled
      - unlabeled
      - locked
      - unlocked
      - milestoned
      - demilestoned

  # https://github.com/mkungla/github-cicd/discussions/11#discussioncomment-1233633
  issue_comment:
    types:
      - created
      - deleted
      - edited

  schedule:
    - name: "daily"
      cron: '0 0 * * *' # e.g. 5min */5 * * * *

jobs:
  #############################################################################
  # Workflow pipline triggers
  # add pipline entrypoint based on event or multiple conditions
  #############################################################################
  # Comment
  issue-comment:
    name: Issue comment
    runs-on: ubuntu-latest
    if: github.event_name == 'issue_comment' && !github.event.issue.pull_request
    steps:
      - if: github.event.action == 'created'
        run: |
          echo "${{ github.event.sender.login }} commented on issue #${{ github.event.issue.number }}"
      - if: github.event.action == 'deleted'
        run: |
          echo "${{ github.event.sender.login }} deleted comment on issue #${{ github.event.issue.number }}"
      - if: github.event.action == 'edited'
        run: |
          echo "${{ github.event.sender.login }} edited comment on issue #${{ github.event.issue.number }}"

  # Issues
  issue:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    outputs:
      user-issues-total: ${{ steps.set-user-issues-total.outputs.value }}
    steps:
      # no pull request should trugger this job
      - if: github.event.issue.pull_request
        name: is pull request
        run: |
          echo "issue #${{ github.event.issue.number }} pull_request #${{ github.event.issue.pull_request }}"
          exit 1
      # just print issue payload
      - name: issue payload
        run: |
          echo '::group::${{ format('issue #{0} - {1}', github.event.issue.number, github.event.issue.html_url) }}'
          echo '${{ toJSON(github.event) }}'
          echo '::endgroup::'
      - id: set-user-issues-total
        uses: actions/github-script@v4
        with:
          script: |
            const user = context.payload.sender.login
            const query = `query($user: String) {
              repository(owner: "mkungla", name: "github-cicd") {
                issues(filterBy: {createdBy: $user}) {
                  totalCount
                }
              }
            }`
            const res = await github.graphql(query, {
              "user": user
            })
            core.info(`user: ${user} has total ${res.repository.issues.totalCount} issues`)
            core.setOutput('value', res.repository.issues.totalCount)

  # Schedule
  schedule:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

  daily:
    needs: schedule
    if: github.event.schedule == '*/5 * * * *'
    runs-on: ubuntu-latest
    steps:
      - if: ${{ contains(toJSON(github.event), 'daily') }}
        run: exit 1

  #############################################################################
  # Workflow action tricers
  # These jobs set outputs what (Workflow actors) use to trigger actual actions
  #############################################################################
  compose-comments:
    needs:
      - issue
    runs-on: ubuntu-latest
    outputs:
      issue_url: ${{ github.event.issue.html_url }}
      issue_comment: ${{ join(steps.*.outputs.issue_comment, '\n\n') }}
    steps:
      - id: greeting-on-first-issue
        if: github.event.action == 'opened' && needs.issue.outputs.user-issues-total == 0
        env:
          comment: "ðŸ‘‹ Thanks for reporting @${{ github.event.sender.login }}!\n
            This your first issue and will be reviewed shortly."
        run: echo "::set-output name=issue_comment::${{env.comment}}"

      - id: greeting-for-reccuring-user
        if: github.event.action == 'opened' && needs.issue.outputs.user-issues-total > 0
        env:
          comment: ":boom: Thanks for reporting again @${{ github.event.sender.login }}!\n
            You have opened total **${{ needs.issue.outputs.user-issues-total }}** issues in this repository."
        run: echo "::set-output name=issue_comment::${{env.comment}}"

  #############################################################################
  # Workflow actors
  #############################################################################

  # comment on issue
  comment:
    # all the jobs which can comment
    needs:
      - compose-comments
    if: contains(join(needs.*.outputs.issue_url, ''), 'https://') &&
      join(needs.*.outputs.issue_comment, '\n\n') != ''
    runs-on: ubuntu-latest
    env:
      issue_url: ${{ join(needs.*.outputs.issue_url, '') }}
      issue_comment: ${{ join(needs.*.outputs.issue_comment, '\n\n') }}
    steps:
      # - run: echo "toJSON(needs)"
      # POST copmment
      - name: post comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh issue comment ${{ env.issue_url }} --body "${{ env.issue_comment }}"

  # add remove labels
  labels:
    needs:
      - issue
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: on open add labels
        if: github.event.action == 'opened' && !contains(github.event.issue.labels.*.name, 'triage')
        run: gh issue edit ${{ github.event.issue.html_url }} --add-label "triage"
      - name: on close remove labels
        if: github.event.action == 'closed' && contains(github.event.issue.labels.*.name, 'triage')
        run: gh issue edit ${{ github.event.issue.html_url }} --remove-label "triage"

  # add reactions
  reaction:
    needs:
      - issue
    runs-on: ubuntu-latest
    steps:
      - if: github.event.action == 'opened'
        uses: actions/github-script@v4
        with:
          script: |
            github.reactions.createForIssue({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: 'heart',
            })

  # check stale issues
  stale:
    needs:
      - daily
      - issue-comment
    # only run on schedule and issue comment
    # also would be nice to skip that if this job was just executed
    # e.g. on heated discussion under issue.
    if: always() && github.event_name != 'issues'
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/stale/pull/554
      - uses: mkungla/stale@main
        with:
          days-before-issue-stale: 2
          days-before-issue-close: 2
          stale-issue-message: 'This issue has no activity for a while.'
          close-issue-message: 'This issue was closed since there was no activity after it was marked stale.'
          stale-issue-label: 'stale'
          exempt-issue-labels: 'bug'
          remove-issue-stale-when-updated: true
          labels-to-add-when-unstale: 'triage'
          exempt-all-issue-milestones: true
          days-before-pr-stale : -1
          days-before-pr-close: -1

